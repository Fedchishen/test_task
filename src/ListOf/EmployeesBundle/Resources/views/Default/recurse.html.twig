{# Рекурсивно выводим всех работников в древовидной форме.
UPD: в 12м задании необходимость погружения через рекурсию отпала#}
{#{% macro recursiveEmploye(id,employees,position) %}
    {% for em in employees if em.chiefid == id and em.id != em.chiefid  %}
        <li>Ф.И.О.: {{ em.surname }}&nbsp;{{ em.firstname }}&nbsp;{{ em.middlename }} / 
            Должность: {{ position[em.positionid] }} / 
            Дата ​приема ​на ​работу: {{ em.dateofemployment|date('Y-m-d')}} / 
            З/П: {{ em.wages }}
                <ul> 
                {{ _self.recursiveEmploye(em.id,employees,position) }}
                </ul>
        </li>
    {% endfor %}
{% endmacro %}#}

{% macro recursiveEmploye(id,employees,position) %}
    {% for em in employees if em.chiefid == id and em.id != em.chiefid %}
        <li><div onclick="NextLevel({{em.id}});">Ф.И.О.: {{ em.surname }}&nbsp;{{ em.firstname }}&nbsp;{{ em.middlename }} / 
            Должность: {{ position[em.positionid] }} / 
            Дата ​приема ​на ​работу: {{ em.dateofemployment|date('Y-m-d')}} / 
            З/П: {{ em.wages }}
            </div>
            <ul id="{{em.id}}">
            </ul>
        </li>
    {% endfor %}
{% endmacro %}


<ul class="treeline">
{% for em in employees if em.positionid == 1 %}
        <li>Ф.И.О.: {{ em.surname }}&nbsp;{{ em.firstname }}&nbsp;{{ em.middlename }} / 
            Должность: {{ position[em.positionid] }} / 
            Дата ​приема ​на ​работу: {{ em.dateofemployment|date('Y-m-d')}} / 
            З/П: {{ em.wages }}
                <ul> 
                {{ _self.recursiveEmploye(em.id,employees,position) }}
                </ul>
        </li>
{% endfor %}
</ul>

